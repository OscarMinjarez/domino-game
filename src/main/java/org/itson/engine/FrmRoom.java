/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package org.itson.engine;

import org.itson.game.GameView;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import static javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE;
import org.itson.game.GameController;
import org.itson.player.Player;
import org.itson.room.Room;
import org.itson.token.MuleToken;

/**
 *
 * @author arace
 */
public class FrmRoom extends javax.swing.JFrame {

    private static FrmRoom instance;

    private Room room;
    private Player player;
    private GameController gameController;
    private int maxNumberOfPlayers;

    /**
     * Creates new form FrmRoom
     */
    private FrmRoom() {
        initComponents();
        this.gameController = GameController.get();
    }
    
    private void showFrmCreateRoom() {
        int option = JOptionPane.showConfirmDialog(this, "Do you want to come back?", "Exit", JOptionPane.YES_NO_OPTION);
        
        if (option == JOptionPane.YES_OPTION) {
            this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            FrmMainMenuPlayer.get().setVisible(true);
            this.dispose();
        } else {
            this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        }
    }
    private void showMAIN() throws IOException{
        int option = JOptionPane.showConfirmDialog(this, "Are you sure to start the game?", "Confirm", JOptionPane.YES_NO_OPTION);
        if(option == JOptionPane.YES_OPTION){
            this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            GameView.get().setVisible(true);
            this.dispose();
        } else {
            this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        }
    }
    private void showFrmGame() throws IOException{
        GameView frmGame = GameView.get();
        frmGame.setPlayer(player);
        frmGame.setVisible(true);
        hiddenWindow();
    }
    
    private void hiddenWindow() {
        setVisible(false);
    }
    
    public void setRoom(Room room) {
        get().room = room;
    }
    
    public void setPlayer(Player player) {
        get().player = player;
    }
    
    public void setMaxNumberOfPlayers(int numberOfPlayers) {
        get().maxNumberOfPlayers = numberOfPlayers;
    }
    
    public void addPlayer(Player player) {
        if (this.room.getPlayers().size() < this.maxNumberOfPlayers) {
            this.room.addPlayer(player);
        }
        
        this.setNumberOfPlayersConnected();
    }

    public static FrmRoom get() {
        if (FrmRoom.instance == null) {
            FrmRoom.instance = new FrmRoom();
        }
        
        return FrmRoom.instance;
    }
    
    private void setNumberOfPlayersConnected() {
        get().numberOfPlayersConnected.setText(get().room.getPlayers().size() + " players connected");
    }

    public void checkNumberOfPlayers(){
        int desiredNumberOfPlayers = 4; 
    if (this.room.getPlayers().size() == desiredNumberOfPlayers) {
    } else {
    }
}
    public void enableStartGameButton() {
    if (this.room.getPlayers().size() >= 2) {
        btnGame.setEnabled(true);
    } else {
        btnGame.setEnabled(false);
    }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        btnExit = new javax.swing.JButton();
        btnHelp = new javax.swing.JButton();
        btnGame = new javax.swing.JButton();
        lblWelcome = new javax.swing.JLabel();
        lblPlayersConnected = new javax.swing.JLabel();
        numberOfPlayersConnected = new javax.swing.JLabel();
        lbl = new javax.swing.JLabel();
        lblAvatar = new javax.swing.JLabel();

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnExit.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/other/Boton.png"))); // NOI18N
        btnExit.setBorderPainted(false);
        btnExit.setContentAreaFilled(false);
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });
        getContentPane().add(btnExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 410, -1, -1));

        btnHelp.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        btnHelp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/other/help.png"))); // NOI18N
        btnHelp.setBorderPainted(false);
        btnHelp.setContentAreaFilled(false);
        btnHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHelpActionPerformed(evt);
            }
        });
        getContentPane().add(btnHelp, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 350, -1, -1));

        btnGame.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        btnGame.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/other/btnStartGame.png"))); // NOI18N
        btnGame.setBorderPainted(false);
        btnGame.setContentAreaFilled(false);
        btnGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGameActionPerformed(evt);
            }
        });
        getContentPane().add(btnGame, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 420, 122, 68));

        lblWelcome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/other/welcometotheroom.png"))); // NOI18N
        getContentPane().add(lblWelcome, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 10, -1, -1));

        lblPlayersConnected.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/other/conectedPlayers.png"))); // NOI18N
        getContentPane().add(lblPlayersConnected, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, -1));

        numberOfPlayersConnected.setBackground(new java.awt.Color(255, 255, 255));
        numberOfPlayersConnected.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        getContentPane().add(numberOfPlayersConnected, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 100, 210, 50));

        lbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/other/fondoRoom.jpg"))); // NOI18N
        getContentPane().add(lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 590));
        getContentPane().add(lblAvatar, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 300, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGameActionPerformed
        try {
            
            gameController.createGame();
            gameController.createBoard();
            gameController.createPit();
            
            gameController.createPlayer(player.getName());
            
            gameController.setGameInTheRoom(gameController.getGame());
            gameController.generateTokens();
            gameController.saveTokensInThePit(gameController.getTokensComponents());
            System.out.println("Total tokens generated on the pit: " + gameController.getTokensFromPit().size());
            gameController.dealTokens(gameController.getPlayers(), 7);
            System.out.println("Total players on the game: " + gameController.getPlayers().size());
            System.out.println("Total tokens on the pit: " + gameController.getTokensFromPit().size());
            MuleToken firstMuleToken = gameController.getBiggestMuleTokenFromPlayers(gameController.getPlayers());
            System.out.println("Biggest mule token: " + firstMuleToken);  
            
            for (Player player : gameController.getPlayers()) {
                System.out.println("Total tokens for " + player.getName() + ": " + player.getTokens().size());
            }
            
            System.out.println("Tokens on the board after putting the biggest mule token: ");
            gameController.putTokenOnBoard(firstMuleToken);
            System.out.println("Total tokens on the board: " + gameController.getTokensFromTheBoard().size());
            System.out.println("Total tokens on the pit: " + gameController.getTokensFromPit().size());
            gameController.setInPlayers(gameController.getPlayers());
            showFrmGame();
            
            
        } catch (IOException ex) {
            Logger.getLogger(FrmRoom.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnGameActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        showFrmCreateRoom();
    }//GEN-LAST:event_btnExitActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        showFrmCreateRoom();
    }//GEN-LAST:event_formWindowClosing

    private void btnHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHelpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnHelpActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmRoom().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnGame;
    private javax.swing.JButton btnHelp;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lbl;
    private javax.swing.JLabel lblAvatar;
    private javax.swing.JLabel lblPlayersConnected;
    private javax.swing.JLabel lblWelcome;
    private javax.swing.JLabel numberOfPlayersConnected;
    // End of variables declaration//GEN-END:variables
}
